{"remainingRequest":"C:\\Users\\sc948\\Desktop\\Vue\\portfolio\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\sc948\\Desktop\\Vue\\portfolio\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\sc948\\Desktop\\Vue\\portfolio\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\sc948\\Desktop\\Vue\\portfolio\\src\\components\\PortfolioListPage1.vue?vue&type=template&id=665aa14c&scoped=true&","dependencies":[{"path":"C:\\Users\\sc948\\Desktop\\Vue\\portfolio\\src\\components\\PortfolioListPage1.vue","mtime":1630583649221},{"path":"C:\\Users\\sc948\\Desktop\\Vue\\portfolio\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\sc948\\Desktop\\Vue\\portfolio\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\sc948\\Desktop\\Vue\\portfolio\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\sc948\\Desktop\\Vue\\portfolio\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}