{"remainingRequest":"C:\\Users\\sc948\\Desktop\\Vue\\portfolio\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\sc948\\Desktop\\Vue\\portfolio\\src\\components\\PortfolioListPage.vue?vue&type=style&index=0&id=0076fd60&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\sc948\\Desktop\\Vue\\portfolio\\src\\components\\PortfolioListPage.vue","mtime":1630583831006},{"path":"C:\\Users\\sc948\\Desktop\\Vue\\portfolio\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\sc948\\Desktop\\Vue\\portfolio\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\sc948\\Desktop\\Vue\\portfolio\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\sc948\\Desktop\\Vue\\portfolio\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\sc948\\Desktop\\Vue\\portfolio\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQoudGVzdHsNCiAgICB3aWR0aDogMjkwcHg7DQogICAgaGVpZ2h0OiA0MDBweDsNCiAgICB0b3A6IDE1MHB4Ow0KICAgIGxlZnQ6IDMyMHB4Ow0KICAgIHBvc2l0aW9uOmZpeGVkOw0KfQ0KLnRlc3Qxew0KICAgIHdpZHRoOiAyOTBweDsNCiAgICBoZWlnaHQ6IDQwMHB4Ow0KICAgIHRvcDogMTUwcHg7DQogICAgbGVmdDogNjQwcHg7DQogICAgcG9zaXRpb246IGZpeGVkOw0KfQ0KLnRlc3Qyew0KICAgIHdpZHRoOiAyOTBweDsNCiAgICBoZWlnaHQ6IDQwMHB4Ow0KICAgIHRvcDogMTUwcHg7DQogICAgbGVmdDogOTYwcHg7DQogICAgcG9zaXRpb246IGZpeGVkOw0KfQ0KLnRlc3Qzew0KICAgIHdpZHRoOiAyOTBweDsNCiAgICBoZWlnaHQ6IDQwMHB4Ow0KICAgIHRvcDogMTUwcHg7DQogICAgbGVmdDogMTI4MHB4Ow0KICAgIHBvc2l0aW9uOiBmaXhlZDsNCn0NCi50ZXN0NHsNCiAgICB3aWR0aDogMjkwcHg7DQogICAgaGVpZ2h0OiA0MDBweDsNCiAgICB0b3A6IDYwMHB4Ow0KICAgIGxlZnQ6IDMyMHB4Ow0KICAgIHBvc2l0aW9uOiBmaXhlZDsNCn0NCi50ZXN0NXsNCiAgICB3aWR0aDogMjkwcHg7DQogICAgaGVpZ2h0OiA0MDBweDsNCiAgICB0b3A6IDYwMHB4Ow0KICAgIGxlZnQ6IDY0MHB4Ow0KICAgIHBvc2l0aW9uOiBmaXhlZDsNCn0NCi50ZXN0NnsNCiAgICB3aWR0aDogMjkwcHg7DQogICAgaGVpZ2h0OiA0MDBweDsNCiAgICB0b3A6IDYwMHB4Ow0KICAgIGxlZnQ6IDk2MHB4Ow0KICAgIHBvc2l0aW9uOiBmaXhlZDsNCn0NCi50ZXN0N3sNCiAgICB3aWR0aDogMjkwcHg7DQogICAgaGVpZ2h0OiA0MDBweDsNCiAgICB0b3A6IDYwMHB4Ow0KICAgIGxlZnQ6IDEyODBweDsNCiAgICBwb3NpdGlvbjogZml4ZWQ7DQp9DQouTGVmdHsNCiAgICB3aWR0aDogMTAwcHg7DQogICAgaGVpZ2h0OiAyMDBweDsNCiAgICB0b3A6IDQ4MHB4Ow0KICAgIGxlZnQ6IDEwMHB4Ow0KICAgIHBvc2l0aW9uOiBmaXhlZDsNCn0NCi5SaWdodHsNCiAgICB3aWR0aDogMTAwcHg7DQogICAgaGVpZ2h0OiAyMDBweDsNCiAgICB0b3A6IDQ4MHB4Ow0KICAgIGxlZnQ6IDE2MjVweDsNCiAgICBwb3NpdGlvbjogZml4ZWQ7DQoNCn0NCi5NZW51QnV0dG9uew0KICAgIHRvcDogMHB4Ow0KICAgIGxlZnQ6MHB4Ow0KICAgIHBvc2l0aW9uOiBmaXhlZDsNCn0NCi50aXR0bGV7DQogICBwb3NpdGlvbjogYWJzb2x1dGU7DQogICAgaGVpZ2h0OiAzMHB4Ow0KICAgIHdpZHRoOiAxNTBweDsNCiAgICB0b3A6IDMwcHg7DQogICAgbGVmdDogNjBweDsNCiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI1NSwgMjU1LCAyNTUpOw0KICBib3JkZXI6IG5vbmU7DQogICBjb2xvcjogcmdiKDI3LCAyNywgMjcpOw0KICBwYWRkaW5nOiAxNXB4IDE1cHg7DQogIHRleHQtYWxpZ246c3RhcnQ7DQogIHRleHQtZGVjb3JhdGlvbjogbm9uZTsNCiAgZGlzcGxheTogaW5saW5lLWJsb2NrOw0KICBmb250LXNpemU6IDIwcHg7DQogIG1hcmdpbjogMnB4IDJweDsNCiAgY3Vyc29yOiBwb2ludGVyOw0KDQogICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7DQp9DQoudGl0dGxlVGV4dHsNCiAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCiAgICBoZWlnaHQ6IDUwcHg7DQogICB3aWR0aDogMTUwcHg7DQogICAgdG9wOiAwcHg7DQogICAgbGVmdDogMTUwcHg7DQogIGJhY2tncm91bmQtY29sb3I6IHJnYigyNTUsIDI1NSwgMjU1KTsNCiAgYm9yZGVyOiBub25lOw0KICAgY29sb3I6IHJnYigyNywgMjcsIDI3KTsNCiAgcGFkZGluZzogMTVweCAzMHB4Ow0KICB0ZXh0LWFsaWduOnN0YXJ0Ow0KICB0ZXh0LWRlY29yYXRpb246IG5vbmU7DQogIGRpc3BsYXk6IGlubGluZS1ibG9jazsNCiAgZm9udC1zaXplOiAxMHB4Ow0KICBtYXJnaW46IDRweCAycHg7DQogIGN1cnNvcjogcG9pbnRlcjsNCiAgIGJvcmRlcjogc29saWQgMnB4IHJnYigwLCAwLCAwKTsNCg0KICAgd29yZC13cmFwOiBicmVhay13b3JkOw0KfQ0KLnRpdGxsZUltZ0J1dHRvbnsNCiAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCiAgICBoZWlnaHQ6IDMwcHg7DQogICB3aWR0aDogMzBweDsNCiAgICB0b3A6IDEwMHB4Ow0KICAgIGxlZnQ6IDcwcHg7DQogIGJhY2tncm91bmQtY29sb3I6IHJnYigyNTUsIDE5NiwgMCk7DQogIGJvcmRlcjogbm9uZTsNCiAgIGNvbG9yOiByZ2IoMjU1LCAyNTUsIDI1NSk7DQogIHBhZGRpbmc6IDE1cHggMTVweDsNCiAgdGV4dC1hbGlnbjpjZW50ZXI7DQogIHRleHQtZGVjb3JhdGlvbjogbm9uZTsNCiAgZGlzcGxheTogaW5saW5lLWJsb2NrOw0KICBmb250LXNpemU6IDE1cHg7DQogIG1hcmdpbjogMnB4IDJweDsNCiAgY3Vyc29yOiBwb2ludGVyOw0KICAgYm9yZGVyOiBzb2xpZCAycHggcmdiKDAsIDAsIDApOw0KICBsaW5lLWhlaWdodDogMHB4OyANCiAgICBkaXNwbGF5OiBmbGV4Ow0KICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsNCiAgYWxpZ24taXRlbXM6IGNlbnRlcjsNCn0NCi5UaXRsbGVJbWdCb3h7DQogICBwb3NpdGlvbjogYWJzb2x1dGU7DQogICAgaGVpZ2h0OiAzMHB4Ow0KICAgd2lkdGg6IDMxMHB4Ow0KICAgIHRvcDogNTBweDsNCiAgICBsZWZ0OiA3MHB4Ow0KICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjU1LCAyNTUsIDI1NSk7DQogIGJvcmRlcjogbm9uZTsNCiAgIGNvbG9yOiByZ2IoMjcsIDI3LCAyNyk7DQogIHBhZGRpbmc6IDE1cHggMzBweDsNCiAgdGV4dC1hbGlnbjpzdGFydDsNCiAgdGV4dC1kZWNvcmF0aW9uOiBub25lOw0KICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7DQogIGZvbnQtc2l6ZTogMTBweDsNCiAgbWFyZ2luOiA0cHggMnB4Ow0KICBjdXJzb3I6IHBvaW50ZXI7DQogICBib3JkZXI6IHNvbGlkIDJweCByZ2IoMCwgMCwgMCk7DQogICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7DQp9DQouZmlsZUltZ0J1dHRvbnsNCiAgIHBvc2l0aW9uOiBmaXhlZDsNCiAgICBoZWlnaHQ6IDMwMHB4Ow0KICAgd2lkdGg6IDMwcHg7DQogICAgdG9wOiAxMzBweDsNCiAgICBsZWZ0OiA3MHB4Ow0KfQ0KLmZpbGVUZXh0Qm94ew0KICAgcG9zaXRpb246IGFic29sdXRlOw0KICAgIGhlaWdodDogMzBweDsNCiAgIHdpZHRoOiAzMTBweDsNCiAgICB0b3A6IDEzMHB4Ow0KICAgIGxlZnQ6IDcwcHg7DQogIGJhY2tncm91bmQtY29sb3I6IHJnYigyNTUsIDI1NSwgMjU1KTsNCiAgYm9yZGVyOiBub25lOw0KICAgY29sb3I6IHJnYigyNywgMjcsIDI3KTsNCiAgcGFkZGluZzogMTVweCAzMHB4Ow0KICB0ZXh0LWFsaWduOnN0YXJ0Ow0KICB0ZXh0LWRlY29yYXRpb246IG5vbmU7DQogIGRpc3BsYXk6IGlubGluZS1ibG9jazsNCiAgZm9udC1zaXplOiAxMHB4Ow0KICBtYXJnaW46IDRweCAycHg7DQogIGN1cnNvcjogcG9pbnRlcjsNCiAgIGJvcmRlcjogc29saWQgMnB4IHJnYigwLCAwLCAwKTsNCiAgIHdvcmQtd3JhcDogYnJlYWstd29yZDsNCn0NCi5idXR0b25fRWxzZXsNCiAgICBwb3NpdGlvbjogYWJzb2x1dGU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI1NSwgMTk2LCAwKTsNCiAgICBjb2xvcjogcmdiKDI1NSwgMjU1LCAyNTUpOw0KICAgIGJvcmRlcjogc29saWQgMnB4IHJnYigwLCAwLCAwKTsgDQogDQp9DQouYnV0dG9uX1RleHRCb3h7DQogICAgcG9zaXRpb246IGFic29sdXRlOw0KICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigxMDIsIDEwMiwgMTAyKTsNCiAgICBjb2xvcjogcmdiKDI1NSwgMjU1LCAyNTUpOw0KICAgIGJvcmRlcjogc29saWQgMnB4IHJnYigwLCAwLCAwKTsNCn0NCi5wYWdlX19kZW1vLWdyb3VwIHsNCiAgIHRvcDogNjAwcHg7DQogICAgbGVmdDogMzIwcHg7DQogICAgbWFyZ2luLWJvdHRvbTogMTZweDsNCiAgIHdpZHRoOiAxMDBweDsgDQogICBwb3NpdGlvbjpmaXhlZDsNCn0NCg0KIC5pbnB1dGZpbGUgew0KICAgIC8qIHRvcDo1MHB4OyAqLw0KICAgIGxlZnQ6MTUwcHg7DQogICAgZm9udC1zaXplOjE1cHg7DQogICAgd2lkdGg6IGF1dG87DQogICAgaGVpZ2h0OiBhdXRvOw0KICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCn0NCiAueW95b28tZGRyIHsNCiAgICB3aWR0aDogYXV0bzsNCiAgICBoZWlnaHQ6IGF1dG87DQogICAgcG9zaXRpb246IGFic29sdXRlOw0KfQ0KDQoNCi5pbWcgew0KICAgIHdpZHRoOiAxMDAlOw0KICAgIGhlaWdodDogMTAwJTsNCiAgICB0b3A6IDUwJTsNCiAgICBsZWZ0OiA1MCU7DQogICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7DQogICAgcG9zaXRpb246IGFic29sdXRlOyAgIA0KfQ0KLnlveW9vLWRkciAucmVzaXplLWhhbmRsZXIsDQoueW95b28tZGRyIC5yb3RhdGUtaGFuZGxlciB7DQogIGRpc3BsYXk6IG5vbmU7DQp9DQoNCi55b3lvby1kZHIuYWN0aXZlIHsNCiAgYm9yZGVyOiAxcHggZGFzaGVkICM2MDdkOGI7DQp9DQoNCi55b3lvby1kZHIuYWN0aXZlIC5yZXNpemUtaGFuZGxlciwNCi55b3lvby1kZHIuYWN0aXZlIC5yb3RhdGUtaGFuZGxlciB7DQogIGRpc3BsYXk6IGlubGluZS1ibG9jazsNCn0NCg0KLnJlc2l6ZS1oYW5kbGVyLA0KLnJvdGF0ZS1oYW5kbGVyIHsNCiAgcG9zaXRpb246IGFic29sdXRlOw0KICBib3JkZXI6IDFweCBzb2xpZCAjNjA3ZDhiOw0KICBiYWNrZ3JvdW5kOiAjZmZmOw0KICBib3gtc2l6aW5nOiBib3JkZXItYm94Ow0KICBib3JkZXItcmFkaXVzOiA1MCU7DQp9DQoNCi50ZXh0Qm94X3Jlc2l6ZS1oYW5kbGVyLA0KLnRleHRCb3hfcm90YXRlLWhhbmRsZXIgew0KICBwb3NpdGlvbjogYWJzb2x1dGU7DQogIGJvcmRlcjogMXB4IHNvbGlkICM2MDdkOGI7DQogIGJhY2tncm91bmQ6ICNmZmY7DQogIGJveC1zaXppbmc6IGJvcmRlci1ib3g7DQogIGJvcmRlci1yYWRpdXM6IDUwJTsNCn0NCi5yZXNpemUtaGFuZGxlci50bSB7DQogIGxlZnQ6IDUwJTsNCn0NCg0KLnJlc2l6ZS1oYW5kbGVyLnIgew0KICB0b3A6IDUwJTsNCn0NCg0KLnJlc2l6ZS1oYW5kbGVyLmJtIHsNCiAgbGVmdDogNTAlOw0KfQ0KDQoucmVzaXplLWhhbmRsZXIubCB7DQogIHRvcDogNTAlOw0KICBjdXJzb3I6IHBvaW50ZXI7DQp9DQoNCi5yb3RhdGUtaGFuZGxlciB7DQogIGxlZnQ6IDUwJTsNCiAgY3Vyc29yOiBjcm9zc2hhaXI7DQp9IA0KLnRleHRCb3hfcm90YXRlLWhhbmRsZXIgew0KICBsZWZ0OiA1MCU7DQogIGN1cnNvcjogY3Jvc3NoYWlyOw0KfSANCi50ZXh0Qm94IHsNCiAgcG9zaXRpb246IGFic29sdXRlOw0KICByZXNpemU6IGJvdGg7DQogIGRpc3BsYXk6IGlubGluZS1ibG9jazsNCiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7DQogIG92ZXJmbG93LXk6c2Nyb2xsOw0KICB3aGl0ZS1zcGFjZTpub3JtYWw7DQogIGN1cnNvciA6IG1vdmU7DQp9ICANCg=="},{"version":3,"sources":["PortfolioListPage.vue"],"names":[],"mappingsmoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PortfolioListPage.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div>\r\n      <h1>dfsfdfs</h1>\r\n    <div>   \r\n        <b-button v-b-modal.modal-xl variant=\"primary\">\r\n            <img src=\"https://testchn.s3.ap-northeast-2.amazonaws.com/img06.png\" class=\"test\">\r\n        </b-button>\r\n        \r\n      \r\n    <modal>\r\n        <b-modal id=\"modal-xl\" size=\"xl\" title=\"개인 페이지 글쓰기 화면\">\r\n        <!-- 좌측 상단의 설정들 -->\r\n            <br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>\r\n            <div id = \"tittle\" class=\"tittle\" style=\"width:150px;height:30px;top:14px;left:50px;\"> [ 제목 ] :</div>\r\n            <input type=\"tittleText\" class=\"tittleText\" placeholder=\"제목을 입력하세요!\" style=\"width:310px;height:30px;top:30px;left:150px;font-size:10px;\">\r\n            <button id = \"titlleImgButton\" class=\"titlleImgButton\" style=\"width:30px;height:30px;top:80px;left:70px;font-size:15px;\"> + </button> \r\n            <input type=\"text\" class=\"TitlleImgBox\" placeholder=\"썸네일 이미지.jpg\" style=\"width:310px;height:30px;top:80px;left:150px;font-size:15px;\">\r\n          <!-- 파일 추가 버튼 -->\r\n          <div>\r\n              <p><input type=\"file\" id=\"file\" class=\"inputfile\" v-on:change=\"upload\" accept=\"*.gif,.jpg,.png,audio/*\" \r\n              multiple required capture='user' onchange = 'aaa' style=\"width:310px;height:30px;top:130px;left:50px;font-size:15px;\"></p>            \r\n          </div>\r\n            <!-- 추가된 파일-->\r\n\r\n               <div\r\n              ref=\"wrapper\"\r\n              :style=\"style\"\r\n              :class=\"{ active: active }\"\r\n              @touchstart=\"handleMouseDown\"\r\n              @mousedown=\"handleMouseDown\"\r\n              class=\"yoyoo-ddr\" style=\"top:430px;left:50px;\">\r\n          \r\n              <p><img v-bind:src=\"newImgSrc\" class = \"img\"></p>   \r\n              <div v-if=\"resizable\">\r\n                <span\r\n                  :data-resizetype=\"item\"\r\n                  :key=\"item\"\r\n                  :class=\"item\"\r\n                  :style=\"{ ...getNewHandler(item) }\"\r\n                  class=\"resize-handler\"\r\n                  v-for=\"item in resizeHandler\"\r\n                ></span>\r\n              </div>\r\n              <span :style=\"rotateHandler\" v-if=\"rotatable\" data-type=\"rotate\" class=\"rotate-handler\" ></span>\r\n            </div> \r\n               <div\r\n              ref=\"wrapper\"\r\n              :style=\"style\"\r\n              :class=\"{ active: active }\"\r\n              @touchstart=\"handleMouseDownA\"\r\n              @mousedown=\"handleMouseDownA\"\r\n              class=\"textBox_Controller\" draggable='true' style=\"top:430px;left:50px;\"> \r\n          \r\n                <div  v-if=\"resizable\">\r\n                  <span\r\n                    :data-resizetype=\"item\"\r\n                    :key=\"item\"\r\n                    :class=\"item\"\r\n                    :style=\"{ ...getNewHandler(item) }\"\r\n                    class=\"textBox_resize-handler\"\r\n                    v-for=\"item in resizeHandler\"\r\n                  ></span>\r\n                </div>\r\n                <span :style=\"rotateHandler\" v-if=\"rotatable\" data-type=\"rotate\" class=\"textBox_rotate-handler\" ></span>\r\n            </div> \r\n      \r\n        <div id = \"buttons\" > <!-- 우측 상단의 버튼들 -->\r\n                <!-- <button id = \"button01\" class=\"button_Else\" style=\"width:70px;height:35px;top:30px;left:500px;font-size:15px;\" data-toggle=\"dropdown\" aria-expanded=\"false\"> 글꼴 </button> \r\n                <button id = \"button02\" class=\"button_Else\" style=\"width:70px;height:35px;top:30px;left:580px;font-size:15px;\"> 크기 </button> \r\n                <button id = \"button03\" class=\"button_Else\" style=\"width:50px;height:35px;top:30px;left:660px;font-size:15px;\"> 색 </button>  -->\r\n                 <b-form-select class=\"button_Else\" style=\"width:50px;height:35px;top:30px;left:500px;font-size:15px;\" \r\n                   v-model=\"selected\" :options=\"text_Style_options\" v-on:change=\"textChange_Style\"> 글꼴 </b-form-select> \r\n                <b-form-select class=\"button_Else\"  text=\"글꼴 크기\" style=\"width:50px;height:35px;top:30px;left:580px;font-size:15px;\" \r\n                   v-model=\"selected\" :options=\"text_Size_options\" v-on:change=\"textChange_Size\" ></b-form-select> \r\n                <b-form-select class=\"button_Else\" text=\"글꼴 굵기\" style=\"width:50px;height:35px;top:30px;left:660px;font-size:15px;\" \r\n                   v-model=\"selected\" :options=\"text_Thickness_options\" v-on:change=\"textChange_Bold\"></b-form-select> \r\n\r\n                <button id = \"button04\" class=\"button_Else\" style=\"width:120px;height:35px;top:30px;left:720px;font-size:15px;\"> 하이퍼링크 </button>   \r\n                    <!-- 글상자 관리 -->\r\n                <form method=\"post\" @submit.prevent=\"textBox_Form\"> <!-- 글상자 폼-->\r\n                  <div id=\"textBox_Buttons\">\r\n                    <!-- 글상자 추가 버튼-->\r\n                    <input type=\"button\" class=\"button_TextBox\" value=\"글상자 추가하기\" v-on:click=\"textBox_Add()\" style=\"width:175px;height:35px;top:80px;left:500px;font-size:15px;\">\r\n                    <!-- 글상자 삭제 버튼-->\r\n                    <input type=\"button\" class=\"button_TextBox\" value=\"글상자 삭제하기\" v-on:click=\"textBox_Delete()\" style=\"width:175px;height:35px;top:80px;left:685px;font-size:15px;\"> \r\n                  </div>\r\n               </form>\r\n        </div>\r\n        </b-modal>\r\n    </modal>\r\n      \r\n     <div class=\"box-solid\">solid</div>\r\n      \r\n        <img src=\"../assets/img06.png\" class=\"test1\">\r\n        <img src=\"../assets/img06.png\" class=\"test2\">\r\n        <img src=\"../assets/image.jpg\" class=\"test3\">\r\n        <img src=\"../assets/img06.png\" class=\"test4\">\r\n        <img src=\"../assets/img06.png\" class=\"test5\">\r\n        <img src=\"../assets/img06.png\" class=\"test6\">\r\n        <img src=\"../assets/img06.png\" class=\"test7\">\r\n        <img src=\"../assets/Left.jpg\" class=\"Left\">\r\n        <img src=\"../assets/Right.jpg\" class=\"Right\">\r\n    </div>\r\n   <div>\r\n    <b-button v-b-toggle.sidebar-variant class=\"MenuButton\">Menu bar</b-button>\r\n    <b-sidebar id=\"sidebar-variant\" title=\"Sidebar\" bg-variant=\"dark\" text-variant=\"light\" shadow>\r\n      <div class=\"px-3 py-2\">\r\n        <p>\r\n          Crasasd\r\n        </p>\r\n        <router-link to=\"/PortfolioList\"><b-img src=\"https://picsum.photos/500/500/?image=54\" fluid thumbnail></b-img></router-link>\r\n        <b-text class = \"Lee-link\">이상민 포트폴리오</b-text>\r\n      </div>\r\n       <div class=\"px-3 py-3\">\r\n        <router-link to=\"/PortfolioList1\"><b-img src=\"https://picsum.photos/500/500/?image=54\" fluid thumbnail></b-img></router-link>\r\n        <b-text class = \"Lee-link\">정아연 포트폴리오</b-text>\r\n      </div>\r\n   \r\n       <div class=\"px-3 py-4\">\r\n        <router-link to=\"/PortfolioList2\"><b-img src=\"https://picsum.photos/500/500/?image=54\" fluid thumbnail></b-img></router-link>\r\n        <b-text class = \"Lee-link\">조하늘 포트폴리오</b-text>\r\n      </div>\r\n    \r\n    </b-sidebar>\r\n  </div>\r\n</div>\r\n</template>\r\n\r\n<script> \r\nimport {\r\n  getBoundingRect,\r\n  getHandler,\r\n  getPoints,\r\n  getSize,\r\n  heightMap,\r\n  pointMap,\r\n  pointMap2,\r\n  rad2deg,\r\n  tr2bl,\r\n  widthMap,\r\n} from './helper'\r\nexport default {\r\n  name: 'ddr',\r\n  props: {\r\n    value: {\r\n      default: function() {\r\n        return { x: 0, y: 0, width: 100, height: 100, rotation: 0 }\r\n      },\r\n      type: Object,\r\n    },\r\n    handlerSize: {\r\n      type: Number,\r\n      default: 13,\r\n    },\r\n    active: {\r\n      default: true,\r\n      type: Boolean,\r\n    },\r\n    resizeHandler: {\r\n      default: function() {\r\n        return ['tl', 'tm', 'tr', 'r', 'br', 'bm', 'bl', 'l']\r\n      },\r\n      type: Array,\r\n    },\r\n    resizable: {\r\n      default: true,\r\n      type: Boolean,\r\n    },\r\n    rotatable: {\r\n      default: true,\r\n      type: Boolean,\r\n    },\r\n    draggable: {\r\n      default: true,\r\n      type: Boolean,\r\n    },\r\n    acceptRatio: {\r\n      default: false,\r\n      type: Boolean,\r\n    },\r\n    minWidth: {\r\n      type: Number,\r\n      default: 1,\r\n    },\r\n    minHeight: {\r\n      type: Number,\r\n      default: 1,\r\n    },\r\n    parent: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n          transform: Object.assign({}, this.value),\r\n          currentRatio: 1,\r\n          isInitialRatio: false,\r\n          newImgSrc: '', // 새로운 이미지의 경로를 저장할 변수\r\n          textBox_count : 0, // 글상자 개수\r\n\r\n          selected: null, // 선택된 목록\r\n          text_Style_options: [\r\n            { value: '굴림', text: '굴림'},\r\n            { value: '맑은 고딕', text: '맑은 고딕'},\r\n            { value: '궁서', text: '궁서' },\r\n            { value: '휴먼엽서체', text: '휴먼엽서체'} \r\n          ],\r\n              text_Size_options: [\r\n            { value: '16px', text: '16'},\r\n            { value: '19px', text: '19'},\r\n            { value: '22px', text: '22'},\r\n            { value: '25px', text: '25'},\r\n            { value: '28px', text: '28'},\r\n            { value: '31px', text: '31'},\r\n            { value: '34px', text: '34'},\r\n            { value: '37px', text: '37'},\r\n            { value: '40px', text: '40'},\r\n            { value: '43px', text: '46'},\r\n            { value: '46px', text: '46'},\r\n            { value: '50px', text: '50'},\r\n          ],\r\n              text_Thickness_options: [\r\n            { value: 'normal', text: '얇게'},\r\n            { value: 'bold', text: '굵게'},\r\n          ]\r\n    }\r\n  },\r\n  created() {\r\n    // 缓存当前位置信息\r\n    this.localeTransform = { ...this.transform }\r\n  },\r\n  watch: {\r\n    value(t) {\r\n      this.transform = t\r\n    },\r\n  },\r\n  computed: {\r\n    rotateHandler() {\r\n      let size = Math.ceil(this.handlerSize) + 'px'\r\n      return {\r\n        width: size,\r\n        height: size,\r\n        top: -25 + 'px',\r\n        'margin-left': -Math.floor(this.handlerSize / 2) + 'px',\r\n      }\r\n    },\r\n    style() {\r\n      let transform = this.transform\r\n      return {\r\n        left: transform.x + 'px',\r\n        top: transform.y + 'px',\r\n        width: transform.width + 'px',\r\n        height: transform.height + 'px',\r\n        transform: `rotate(${transform.rotation}deg)`,\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n       upload(e) {\r\n          let file = e.target.files;\r\n          let reader = new FileReader();\r\n\r\n          reader.readAsDataURL(file[0]);\r\n          reader.onload = e => {\r\n              this.newImgSrc = e.target.result;                \r\n          }\r\n       },\r\n    getNewHandler(type) {\r\n      let cursor = getHandler(type, this.transform.rotation)\r\n      let { handlerSize } = this\r\n      let props = {}\r\n      let half = -Math.floor(handlerSize / 2) + 'px'\r\n      switch (type) {\r\n        case 'tl':\r\n          props = {\r\n            top: half,\r\n            left: half,\r\n          }\r\n          break\r\n        case 'tm':\r\n          props = { top: half, 'margin-left': half }\r\n          break\r\n        case 'tr':\r\n          props = { right: half, top: half }\r\n          break\r\n        case 'r':\r\n          props = { right: half, 'margin-top': half }\r\n          break\r\n        case 'br':\r\n          props = { bottom: half, right: half }\r\n          break\r\n        case 'bm':\r\n          props = { 'margin-left': half, bottom: half }\r\n          break\r\n        case 'bl':\r\n          props = { left: half, bottom: half }\r\n          break\r\n        case 'l':\r\n          props = { 'margin-top': half, left: half }\r\n          break\r\n      }\r\n      return {\r\n        cursor: cursor + '-resize',\r\n        width: Math.ceil(handlerSize) + 'px',\r\n        height: Math.ceil(handlerSize) + 'px',\r\n        ...props,\r\n      }\r\n    },\r\n\r\n    handleMouseDown(event) {\r\n      if (!this.active) return\r\n      let point = event.touches ? event.touches[0] : event\r\n      let { clientX, clientY } = point\r\n      this._lastX = clientX\r\n      this._lastY = clientY\r\n      this._activeTarget = event.target\r\n      this._parentRect = this.$refs.wrapper.parentNode.getBoundingClientRect() //  DomRect 구하기 (각종 좌표값이 들어있는 객체)\r\n      this.localeTransform = this.transform\r\n      // Get the movable boundary of the element in the parent element\r\n      if (this.parent) {\r\n        let mouseDownRect = getBoundingRect(this.transform)\r\n        let minLeft = this.transform.x - mouseDownRect.left\r\n        let maxLeft = this._parentRect.width - this.transform.width - minLeft\r\n        let minTop = this.transform.y - mouseDownRect.top\r\n        let maxTop = this._parentRect.height - this.transform.height - minTop\r\n        this.minBoundary = { minLeft, maxLeft, minTop, maxTop }\r\n      }\r\n      document.addEventListener('mousemove', this.handleMouseMove, false) // DOM객체. addEventListener(이벤트명, 실행할 함수명, 옵션)\r\n      document.addEventListener('touchmove', this.handleMouseMove, false)\r\n      document.addEventListener('touchend', this.handleMouseUp, false)\r\n      document.addEventListener('mouseup', this.handleMouseUp, false)\r\n       console.log(event.target.dataset.type);\r\n      if (event.target.dataset.type === 'rotate') {\r\n        this._handlerType = 'rotate'\r\n        this.handleRotateStart(event)\r\n        this.$emit('rotate-start', event, this.transform)\r\n      } else if (this._activeTarget.dataset.resizetype) {\r\n        this._handlerType = 'resize'\r\n        this.handleResizeStart(event)\r\n        this.$emit('resize-start', event, this.transform)\r\n      }\r\n    \r\n      else {\r\n        this._handlerType = 'drag'\r\n        this.draggable && this.$emit('drag-start', event, this.transform)\r\n      }\r\n       console.log(this._handlerType);\r\n    },\r\n        handleMouseDownA(event) {\r\n      if (!this.active) return\r\n      let point = event.touches ? event.touches[0] : event\r\n      let { clientX, clientY } = point\r\n      this._lastX = clientX\r\n      this._lastY = clientY\r\n      this._activeTarget = event.target\r\n      this._parentRect = this.$refs.wrapper.parentNode.getBoundingClientRect() //  DomRect 구하기 (각종 좌표값이 들어있는 객체)\r\n      this.localeTransform = this.transform\r\n      // Get the movable boundary of the element in the parent element\r\n      if (this.parent) {\r\n        let mouseDownRect = getBoundingRect(this.transform)\r\n        let minLeft = this.transform.x - mouseDownRect.left\r\n        let maxLeft = this._parentRect.width - this.transform.width - minLeft\r\n        let minTop = this.transform.y - mouseDownRect.top\r\n        let maxTop = this._parentRect.height - this.transform.height - minTop\r\n        this.minBoundary = { minLeft, maxLeft, minTop, maxTop }\r\n      }\r\n      document.addEventListener('mousemove', this.handleMouseMoveA, false) // DOM객체. addEventListener(이벤트명, 실행할 함수명, 옵션)\r\n      document.addEventListener('touchmove', this.handleMouseMoveA, false)\r\n      document.addEventListener('touchend', this.handleMouseUpA, false)\r\n      document.addEventListener('mouseup', this.handleMouseUpA, false)\r\n       console.log(event.target.dataset.type);\r\n      if (event.target.dataset.type === 'rotate') {\r\n        this._handlerType = 'rotate'\r\n        this.handleRotateStart(event)\r\n        this.$emit('rotate-start', event, this.transform)\r\n      } else if (this._activeTarget.dataset.resizetype) {\r\n        this._handlerType = 'resize'\r\n        this.handleResizeStart(event)\r\n        this.$emit('resize-start', event, this.transform)\r\n      }\r\n    \r\n      else {\r\n        this._handlerType = 'drag'\r\n        this.draggable && this.$emit('drag-start', event, this.transform)\r\n      }\r\n       console.log(this._handlerType);\r\n    },\r\n    handleMouseMove(event) {\r\n        \r\n      if (this._handlerType === 'resize') {\r\n        this.handleResizeMove(event)\r\n        this.$emit('resize', event, this.transform) // emit : 자식 컴포넌트에서 부모 컴포넌트로 데이터를 전달할 때 사용됩니다. resize라는 키를 등록\r\n      } else if (this._handlerType === 'drag' && this.draggable) {\r\n        this.doMove(event)\r\n        this.$emit('drag', event, this.transform)\r\n      } else if (this._handlerType === 'rotate') {\r\n        this.handleRotateMove(event)\r\n        this.$emit('rotate', event, this.transform)\r\n           \r\n      }\r\n     \r\n      console.log(\"handleMouseMove : \"+this._handlerType)\r\n    },\r\n     handleMouseMoveA(event) {\r\n        \r\n      if (this._handlerType === 'resize') {\r\n        this.handleResizeMove(event)\r\n        this.$emit('resize', event, this.transform) // emit : 자식 컴포넌트에서 부모 컴포넌트로 데이터를 전달할 때 사용됩니다. resize라는 키를 등록\r\n      } else if (this._handlerType === 'drag' && this.draggable) {\r\n        this.doMove(event)\r\n        this.$emit('drag', event, this.transform)\r\n      } else if (this._handlerType === 'rotate') {\r\n        this.handleRotateMove(event)\r\n        this.$emit('rotate', event, this.transform)\r\n           \r\n      }\r\n     \r\n      console.log(\"handleMouseMove_A : \"+this._handlerType)\r\n    },\r\n    doMove(event) {\r\n      let { clientX, clientY } = event.touches ? event.touches[0] : event\r\n      let deltaX = clientX - this._lastX\r\n      let deltaY = clientY - this._lastY\r\n      this._lastX = clientX\r\n      this._lastY = clientY\r\n      if (this.parent) {\r\n        this.localeTransform.x += deltaX\r\n        this.localeTransform.y += deltaY\r\n        this.restrictToParentBoundary()\r\n      } else {\r\n        this.transform.x = Math.round(this.transform.x + deltaX)\r\n        this.transform.y = Math.round(this.transform.y + deltaY)\r\n      }\r\n    },\r\n    restrictToParentBoundary() {\r\n      let x = Math.max(this.minBoundary.minLeft, this.localeTransform.x)\r\n      let y = Math.max(this.minBoundary.minTop, this.localeTransform.y)\r\n      x = Math.min(this.minBoundary.maxLeft, x)\r\n      y = Math.min(this.minBoundary.maxTop, y)\r\n      this.transform.x = Math.round(x)\r\n      this.transform.y = Math.round(y)\r\n    },\r\n    handleMouseUp(event) {\r\n      document.removeEventListener('mousemove', this.handleMouseMove, false)\r\n      document.removeEventListener('mouseup', this.handleMouseUp, false)\r\n      document.removeEventListener('touchmove', this.handleMouseMove, false)\r\n      document.removeEventListener('touchend', this.handleMouseUp, false)\r\n      let ev = {\r\n        drag: 'draggable',\r\n        resize: 'resizable',\r\n        rotate: 'rotatable',\r\n      }\r\n      this.isInitialRatio = false\r\n      this[ev[this._handlerType]] && this.$emit(this._handlerType + '-end', event, this.transform)\r\n    },\r\n    handleMouseUpA(event) {\r\n      document.removeEventListener('mousemove', this.handleMouseMoveA, false)\r\n      document.removeEventListener('mouseup', this.handleMouseUpA, false)\r\n      document.removeEventListener('touchmove', this.handleMouseMoveA, false)\r\n      document.removeEventListener('touchend', this.handleMouseUpA, false)\r\n      let ev = {\r\n        drag: 'draggable',\r\n        resize: 'resizable',\r\n        rotate: 'rotatable',\r\n      }\r\n      this.isInitialRatio = false\r\n      this[ev[this._handlerType]] && this.$emit(this._handlerType + '-end', event, this.transform)\r\n    },\r\n    handleResizeStart(event) {\r\n      let type = event.target.dataset.resizetype\r\n      let rect = this.transform\r\n      let matrix = getPoints(rect)\r\n      let pressAngle\r\n      let opposite = matrix[pointMap[type]]\r\n      let opp2 = matrix[pointMap2[type]]\r\n      let { clientX, clientY } = event.touches ? event.touches[0] : event\r\n      let x1 = clientX - this._parentRect.left - opp2.x\r\n      let y1 = clientY - this._parentRect.top - opp2.y\r\n  \r\n      let _width = rect.width,\r\n        _height = rect.height\r\n      if (tr2bl[type]) {\r\n        if (widthMap[type]) _height /= 2\r\n        pressAngle = rad2deg(Math.atan2(_width, _height))\r\n      } else {\r\n        if (heightMap[type]) _width /= 2\r\n        pressAngle = rad2deg(Math.atan2(_height, _width))\r\n      }\r\n      let startAngle = rad2deg(Math.atan2(y1, x1))\r\n      this._resizeOpt = {\r\n        matrix,\r\n        rect,\r\n        type,\r\n        opposite,\r\n        opp2,\r\n        pressAngle,\r\n        startAngle,\r\n      }\r\n    },\r\n    handleResizeMove(event) {\r\n      let { clientX, clientY } = event.touches ? event.touches[0] : event\r\n      let { opposite, opp2, type, pressAngle, startAngle } = this._resizeOpt\r\n      let x = clientX - this._parentRect.left - opp2.x,\r\n        y = clientY - this._parentRect.top - opp2.y,\r\n        dis = Math.hypot(y, x)\r\n      let ratio = event.shiftKey || this.acceptRatio\r\n      if (!this.isInitialRatio && ratio) {\r\n        this.currentRatio = this.transform.width / this.transform.height\r\n        this.isInitialRatio = true\r\n      }\r\n\r\n      if (!ratio) {\r\n        this.isInitialRatio = false\r\n      }\r\n\r\n      let { w, h } = getSize({\r\n        type,\r\n        dis,\r\n        x,\r\n        y,\r\n        startAngle,\r\n        pressAngle,\r\n      })\r\n      let transform = Object.assign({}, this.transform)\r\n      if (this.isInitialRatio) {\r\n        if (widthMap[type]) h = w / this.currentRatio\r\n        else w = h * this.currentRatio\r\n      }\r\n      w = Math.max(Math.round(w), this.minWidth)\r\n      h = Math.max(Math.round(h), this.minHeight)\r\n      if (widthMap[type] && !ratio) {\r\n        transform.width = w\r\n      } else if (heightMap[type] && !ratio) {\r\n        transform.height = h\r\n      } else {\r\n        transform.width = w\r\n        transform.height = h\r\n      }\r\n\r\n      let matrix = getPoints(transform)\r\n      let _opp = matrix[pointMap[type]]\r\n      let deltaX = -(_opp.x - opposite.x),\r\n        deltaY = -(_opp.y - opposite.y)\r\n      transform.x = Math.round(transform.x + deltaX)\r\n      transform.y = Math.round(transform.y + deltaY)\r\n\r\n      this.transform = transform\r\n    },\r\n    handleRotateStart(event) {\r\n      let { clientX, clientY } = event.touches ? event.touches[0] : event\r\n      let t = this.$refs.wrapper.getBoundingClientRect(),\r\n        cx = t.left + t.width / 2,\r\n        cy = t.top + t.height / 2,\r\n        startAngle = (180 / Math.PI) * Math.atan2(clientY - cy, clientX - cx),\r\n        rotation = this.transform.rotation\r\n      this._rotateOpt = { cx, cy, startAngle, rotation }\r\n    },\r\n    handleRotateMove(event) {\r\n\r\n      let { cx, cy, startAngle, rotation } = this._rotateOpt\r\n      let { clientX, clientY } = event.touches ? event.touches[0] : event\r\n      let x = clientX - cx,\r\n         \r\n        y = clientY - cy,\r\n        angle = (180 / Math.PI) * Math.atan2(y, x),\r\n        currentAngle = angle - startAngle,\r\n        r = rotation + currentAngle\r\n\r\n      r = r % 360\r\n      r = r < 0 ? r + 360 : r\r\n      this.transform.rotation = Math.floor(r)\r\n      console.log(\"회전\"+this._handlerType);\r\n    },\r\n   textBox_Add: function () {\r\n\t\t\t\t\tconst addedForm = document.getElementById('textBox_Buttons') // getElementById : document 객체를 대상으로 해당 id 를 가진 요소 노드를 찾아 줍니다.\r\n\t\t\t\t\tconst str = `<textarea type=\"text\" class=\"textBox\" cols=\"80\" rows=\"15\" placeholder=\"글을 입력해주세요.\" \r\n          name=\"done${this.textBox_count}\" id=\"done${this.textBox_count}\"\r\n          style=\"top:${this.textBox_count*370+180}px;left:500px;font-size:15px;position: absolute; resize: both;\"></textarea>\r\n                 <div\r\n              ref=\"wrapper\"\r\n              :style=\"style\"\r\n              :class=\"{ active: active }\"\r\n              @touchstart=\"handleMouseDown\"\r\n              @mousedown=\"handleMouseDown\"\r\n              class=\"textBox_Controller\" style=\"top:430px;left:50px;\">\r\n          \r\n                <div v-if=\"resizable\">\r\n                  <span\r\n                    :data-resizetype=\"item\"\r\n                    :key=\"item\"\r\n                    :class=\"item\"\r\n                    :style=\"{ ...getNewHandler(item) }\"\r\n                    class=\"textBox_resize-handler\"\r\n                    v-for=\"item in resizeHandler\"\r\n                  ></span>\r\n                </div>\r\n                <span :style=\"rotateHandler\" v-if=\"rotatable\" data-type=\"rotate\" class=\"textBox_rotate-handler\" ></span>\r\n            </div> `\r\n\r\n\t\t\t\t\tconst div = document.createElement('div') // createElement : HTML 엘리먼트를 생성 \r\n\t\t\t\t\tdiv.id = 'added' + this.textBox_count\r\n\t\t\t\t\tdiv.innerHTML = str\r\n        \r\n\t\t\t\t\taddedForm.appendChild(div) // appendChild : 부모 노드에 자식 노드를 추가 -> parent.append(child);\r\n\t\t\t\t\tthis.textBox_count++\r\n\t},\r\n    textBox_Delete () {\r\n      if (this.textBox_count > 1) {\r\n        const addedDiv = document.getElementById('added' + (--this.textBox_count))\r\n        document.getElementById('textBox_Buttons').removeChild(addedDiv)\r\n      }\r\n    },\r\n    textBox_Form: function () { // 나중에 서버로 글상자 데이터 보낼 때 밑의 코드 참고하기\r\n          //   const fd = new FormData() // 폼 데이터 객체 생성\r\n          //   for (let i = 0; i < this.textBox_count; i++) {\r\n          //     const added = document.getElementById('done' + i)\r\n          //     fd.append('done' + i, added.value) // append 폼 데이터 객체에 옮길 데이터 지정\r\n          //   }\r\n          //   console.log(fd)\r\n          //   this.$axios.post('/api/create/textBox_Buttons', fd)\r\n          //     .then((response) => {\r\n          //       console.log(response.data)\r\n          //       if (response.data === -1) {\r\n          //         alert('Report Wrong!')\r\n          //       }\r\n          //       this.$router.push({ name: 'Success' })\r\n          //     })\r\n      }\t\r\n  },\r\n   textChange_Style() { // 글자 폰트 변경\r\n             document.getElementById('done${this.textBox_count}').style.fontFamily = this.selected;          \r\n        },\r\n           textChange_Size() { // 글자 크기 변경\r\n           document.getElementById('done${this.textBox_count}').style.fontSize = this.selected;                 \r\n        },\r\n           textChange_Bold() { // 글자 굵기 변경\r\n           document.getElementById('done${this.textBox_count}').style.fontWeight = this.selected;                \r\n        },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.test{\r\n    width: 290px;\r\n    height: 400px;\r\n    top: 150px;\r\n    left: 320px;\r\n    position:fixed;\r\n}\r\n.test1{\r\n    width: 290px;\r\n    height: 400px;\r\n    top: 150px;\r\n    left: 640px;\r\n    position: fixed;\r\n}\r\n.test2{\r\n    width: 290px;\r\n    height: 400px;\r\n    top: 150px;\r\n    left: 960px;\r\n    position: fixed;\r\n}\r\n.test3{\r\n    width: 290px;\r\n    height: 400px;\r\n    top: 150px;\r\n    left: 1280px;\r\n    position: fixed;\r\n}\r\n.test4{\r\n    width: 290px;\r\n    height: 400px;\r\n    top: 600px;\r\n    left: 320px;\r\n    position: fixed;\r\n}\r\n.test5{\r\n    width: 290px;\r\n    height: 400px;\r\n    top: 600px;\r\n    left: 640px;\r\n    position: fixed;\r\n}\r\n.test6{\r\n    width: 290px;\r\n    height: 400px;\r\n    top: 600px;\r\n    left: 960px;\r\n    position: fixed;\r\n}\r\n.test7{\r\n    width: 290px;\r\n    height: 400px;\r\n    top: 600px;\r\n    left: 1280px;\r\n    position: fixed;\r\n}\r\n.Left{\r\n    width: 100px;\r\n    height: 200px;\r\n    top: 480px;\r\n    left: 100px;\r\n    position: fixed;\r\n}\r\n.Right{\r\n    width: 100px;\r\n    height: 200px;\r\n    top: 480px;\r\n    left: 1625px;\r\n    position: fixed;\r\n\r\n}\r\n.MenuButton{\r\n    top: 0px;\r\n    left:0px;\r\n    position: fixed;\r\n}\r\n.tittle{\r\n   position: absolute;\r\n    height: 30px;\r\n    width: 150px;\r\n    top: 30px;\r\n    left: 60px;\r\n  background-color: rgb(255, 255, 255);\r\n  border: none;\r\n   color: rgb(27, 27, 27);\r\n  padding: 15px 15px;\r\n  text-align:start;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  font-size: 20px;\r\n  margin: 2px 2px;\r\n  cursor: pointer;\r\n\r\n   word-wrap: break-word;\r\n}\r\n.tittleText{\r\n   position: absolute;\r\n    height: 50px;\r\n   width: 150px;\r\n    top: 0px;\r\n    left: 150px;\r\n  background-color: rgb(255, 255, 255);\r\n  border: none;\r\n   color: rgb(27, 27, 27);\r\n  padding: 15px 30px;\r\n  text-align:start;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  font-size: 10px;\r\n  margin: 4px 2px;\r\n  cursor: pointer;\r\n   border: solid 2px rgb(0, 0, 0);\r\n\r\n   word-wrap: break-word;\r\n}\r\n.titlleImgButton{\r\n   position: absolute;\r\n    height: 30px;\r\n   width: 30px;\r\n    top: 100px;\r\n    left: 70px;\r\n  background-color: rgb(255, 196, 0);\r\n  border: none;\r\n   color: rgb(255, 255, 255);\r\n  padding: 15px 15px;\r\n  text-align:center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  font-size: 15px;\r\n  margin: 2px 2px;\r\n  cursor: pointer;\r\n   border: solid 2px rgb(0, 0, 0);\r\n  line-height: 0px; \r\n    display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.TitlleImgBox{\r\n   position: absolute;\r\n    height: 30px;\r\n   width: 310px;\r\n    top: 50px;\r\n    left: 70px;\r\n  background-color: rgb(255, 255, 255);\r\n  border: none;\r\n   color: rgb(27, 27, 27);\r\n  padding: 15px 30px;\r\n  text-align:start;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  font-size: 10px;\r\n  margin: 4px 2px;\r\n  cursor: pointer;\r\n   border: solid 2px rgb(0, 0, 0);\r\n   word-wrap: break-word;\r\n}\r\n.fileImgButton{\r\n   position: fixed;\r\n    height: 300px;\r\n   width: 30px;\r\n    top: 130px;\r\n    left: 70px;\r\n}\r\n.fileTextBox{\r\n   position: absolute;\r\n    height: 30px;\r\n   width: 310px;\r\n    top: 130px;\r\n    left: 70px;\r\n  background-color: rgb(255, 255, 255);\r\n  border: none;\r\n   color: rgb(27, 27, 27);\r\n  padding: 15px 30px;\r\n  text-align:start;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  font-size: 10px;\r\n  margin: 4px 2px;\r\n  cursor: pointer;\r\n   border: solid 2px rgb(0, 0, 0);\r\n   word-wrap: break-word;\r\n}\r\n.button_Else{\r\n    position: absolute;\r\n    background-color: rgb(255, 196, 0);\r\n    color: rgb(255, 255, 255);\r\n    border: solid 2px rgb(0, 0, 0); \r\n \r\n}\r\n.button_TextBox{\r\n    position: absolute;\r\n    background-color: rgb(102, 102, 102);\r\n    color: rgb(255, 255, 255);\r\n    border: solid 2px rgb(0, 0, 0);\r\n}\r\n.page__demo-group {\r\n   top: 600px;\r\n    left: 320px;\r\n    margin-bottom: 16px;\r\n   width: 100px; \r\n   position:fixed;\r\n}\r\n\r\n .inputfile {\r\n    /* top:50px; */\r\n    left:150px;\r\n    font-size:15px;\r\n    width: auto;\r\n    height: auto;\r\n    position: absolute;\r\n}\r\n .yoyoo-ddr {\r\n    width: auto;\r\n    height: auto;\r\n    position: absolute;\r\n}\r\n\r\n\r\n.img {\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    position: absolute;   \r\n}\r\n.yoyoo-ddr .resize-handler,\r\n.yoyoo-ddr .rotate-handler {\r\n  display: none;\r\n}\r\n\r\n.yoyoo-ddr.active {\r\n  border: 1px dashed #607d8b;\r\n}\r\n\r\n.yoyoo-ddr.active .resize-handler,\r\n.yoyoo-ddr.active .rotate-handler {\r\n  display: inline-block;\r\n}\r\n\r\n.resize-handler,\r\n.rotate-handler {\r\n  position: absolute;\r\n  border: 1px solid #607d8b;\r\n  background: #fff;\r\n  box-sizing: border-box;\r\n  border-radius: 50%;\r\n}\r\n\r\n.textBox_resize-handler,\r\n.textBox_rotate-handler {\r\n  position: absolute;\r\n  border: 1px solid #607d8b;\r\n  background: #fff;\r\n  box-sizing: border-box;\r\n  border-radius: 50%;\r\n}\r\n.resize-handler.tm {\r\n  left: 50%;\r\n}\r\n\r\n.resize-handler.r {\r\n  top: 50%;\r\n}\r\n\r\n.resize-handler.bm {\r\n  left: 50%;\r\n}\r\n\r\n.resize-handler.l {\r\n  top: 50%;\r\n  cursor: pointer;\r\n}\r\n\r\n.rotate-handler {\r\n  left: 50%;\r\n  cursor: crosshair;\r\n} \r\n.textBox_rotate-handler {\r\n  left: 50%;\r\n  cursor: crosshair;\r\n} \r\n.textBox {\r\n  position: absolute;\r\n  resize: both;\r\n  display: inline-block;\r\n  text-overflow: ellipsis;\r\n  overflow-y:scroll;\r\n  white-space:normal;\r\n  cursor : move;\r\n}  \r\n</style>\r\n\r\n"]}]}